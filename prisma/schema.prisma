// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                     BigInt       @id @default(autoincrement()) @map("user_id")
  nickname               String       @db.VarChar(20)
  email                  String       @unique @db.VarChar(50)
  description            String?      @db.VarChar(50)
  password               String       @db.VarChar(60)
  groupId                BigInt       @map("group_id")
  group                  Group        @relation(fields: [groupId], references: [id])
  consultingAsCounselee  Consulting[] @relation("Counselee")
  consultingAsConsultant Consulting[] @relation("Consultant")
  Chat                   Chat[]
  JackChatRoom           ChatRoom[]   @relation("Jack")
  JillChatRoom           ChatRoom[]   @relation("Jill")

  @@map("tbl_user")
}

model Group {
  id     BigInt    @id @default(autoincrement()) @map("group_id")
  name   String    @db.VarChar(20)
  domain String    @db.VarChar(20)
  type   GroupType
  users  User[]

  @@map("tbl_group")
}

enum GroupType {
  MIDDLE_SCHOOL
  HIGH_SCHOOL
  UNIVERSITY
  OVERSEAS_EMPLOYMENT
  COMPANY
  ETC
}

model Consulting {
  id           BigInt   @id @default(autoincrement()) @map("consulting_id")
  state        State    @default(OPENED)
  counseleeId  BigInt   @map("counselee_id")
  counselee    User     @relation("Counselee", fields: [counseleeId], references: [id])
  consultantId BigInt   @map("consultant_id")
  consultant   User     @relation("Consultant", fields: [consultantId], references: [id])
  startDate    DateTime @map("start_date")
  endDate      DateTime @map("end_date")

  @@map("tbl_consulting")
}

enum State {
  OPENED
  CLOSED
}

model Chat {
  id     BigInt   @id @default(autoincrement()) @map("chat_id")
  text   String   @db.VarChar(200)
  userId BigInt   @map("user_id")
  user   User     @relation(fields: [userId], references: [id])
  sentAt DateTime @default(now()) @map("sent_at")

  @@map("tbl_chat")
}

model ChatRoom {
  id     BigInt @id @default(autoincrement()) @map("chat_room_id")
  jackId BigInt @map("jack_id")
  jack   User   @relation("Jack", fields: [jackId], references: [id])
  jillId BigInt @map("jill_id")
  jill   User   @relation("Jill", fields: [jillId], references: [id])

  @@map("tbl_chat_room")
}
